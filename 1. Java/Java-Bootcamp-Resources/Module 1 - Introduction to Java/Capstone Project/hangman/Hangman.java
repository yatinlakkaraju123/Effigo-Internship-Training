import java.util.Scanner;

public class Hangman {

    public static String[] words = {"ant", "baboon", "badger", "bat", "bear", "beaver", "camel",
    "cat", "clam", "cobra", "cougar", "coyote", "crow", "deer",
    "dog", "donkey", "duck", "eagle", "ferret", "fox", "frog", "goat",
    "goose", "hawk", "lion", "lizard", "llama", "mole", "monkey", "moose",
    "mouse", "mule", "newt", "otter", "owl", "panda", "parrot", "pigeon", 
    "python", "rabbit", "ram", "rat", "raven","rhino", "salmon", "seal",
    "shark", "sheep", "skunk", "sloth", "snake", "spider", "stork", "swan",
    "tiger", "toad", "trout", "turkey", "turtle", "weasel", "whale", "wolf",
    "wombat", "zebra"};

    public static String[] gallows = {"+---+\n" +
    "|   |\n" +
    "    |\n" +
    "    |\n" +
    "    |\n" +
    "    |\n" +
    "=========\n",

    "+---+\n" +
    "|   |\n" +
    "O   |\n" +
    "    |\n" +
    "    |\n" +
    "    |\n" +
    "=========\n",

    "+---+\n" +
    "|   |\n" +
    "O   |\n" +
    "|   |\n" +
    "    |\n" +
    "    |\n" +
    "=========\n",

    " +---+\n" +
    " |   |\n" +
    " O   |\n" +
    "/|   |\n" +
    "     |\n" +
    "     |\n" +
    " =========\n",

    " +---+\n" +
    " |   |\n" +
    " O   |\n" +
    "/|\\  |\n" + //if you were wondering, the only way to print '\' is with a trailing escape character, which also happens to be '\'
    "     |\n" +
    "     |\n" +
    " =========\n",

    " +---+\n" +
    " |   |\n" +
    " O   |\n" +
    "/|\\  |\n" +
    "/    |\n" +
    "     |\n" +
    " =========\n",

    " +---+\n" +
    " |   |\n" +
    " O   |\n" +
    "/|\\  |\n" + 
    "/ \\  |\n" +
    "     |\n" +
    " =========\n"};

    public static void main(String[] args) {

        // choose a random word
        int randomIndx = RandomWord(words.length);
 //       String test = "yatin";
        char[] randomWord = words[randomIndx].toCharArray();
        // Show gallow
        Scanner sc = new Scanner(System.in);
       
        char[] answer = new char[randomWord.length];
        //System.out.println("Word:   ");
        for(int i=0;i<randomWord.length;i++)
        {
            //System.out.print("_ ");
            answer[i] = '_';
        } 
        System.out.print("Word: ");
        for(int i=0;i<answer.length;i++)
        {
            System.out.print(answer[i]+" ");
        } 
        int miss = 0;
        int score = 0;
        String misses = "";
        while(true)
        {    
            
            System.out.print("\nGuess: ");
        char guess = sc.next().charAt(0);
        if(checkGuessInWord(guess, randomWord))
        {
            answer = UpdateWord(guess, randomWord, answer);
            score++;
        }
        else
        {
            miss++;
            misses += guess;
        }
        if(score==randomWord.length)
            {
                System.out.println("Congrats! You won");
                System.exit(0);
            } 
            else if(miss>6)
            {
                System.out.println("Sorry you lost");
                System.exit(0);
            }
        printGallow(miss);
        System.out.println("\nWord: ");
        for(int i=0;i<answer.length;i++)
        {
            System.out.print(answer[i]+" ");
        }
       
        
        System.out.println("\nMisses: "+(misses));
       
        }


        

    }
    /*
     * function name : checkGuessInWord
     * @param guess (char)
     * @param randomWord (char[])
     * @return boolean
     * Inside function:
     * If the guess character is in the randomWord char Array then the function returns true else it returns false
     */
    public static boolean checkGuessInWord(char guess, char[] randomWord)
    {
        for(int i=0;i<randomWord.length;i++)
        {
            if(guess==randomWord[i]) return true;
        }
        return false;
    }
    /*
     * function name: UpdateWord
     * @params: guess(char)
     * @params: randomword(char[]) // the random word generated by the computer
     * @params: answer(char[]) // the word which user tries to guess
     * @return: answer(char[])
     * inside function:
     * the function takes the guess character which is there in random word and puts it in the position
     * of the answer word where the guess character is found in the same position in the randomword
     * 
     */
     
    public static char[] UpdateWord(char guess,char[] randomword,char[] answer)
    {   int indx = 0;
        for(int i=0;i<randomword.length;i++)
        {
            if(randomword[i]==guess)
            {
                indx = i;
                break;
            }
        }
        answer[indx] = guess;
        return answer;
    }
    /*
     * function name: printGallow
     * @params: miss(int)
     * inside function:
     * according to number of misses the function prints Gallow
     */
    public static void printGallow(int miss)
    {   System.out.println(gallows[miss]);
       
    }
    public static int RandomWord(int n)
    {
        return (int)(Math.random()*(n));
    }

}





